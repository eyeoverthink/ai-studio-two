generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  clerkId       String    @unique
  email         String    @unique
  username      String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  credits       Int       @default(10)
  role          Role      @default(USER)
  contents      Content[]
  profile       Profile?
  subscription  UserSubscription?
}

model UserSubscription {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  userId                 String    @unique @db.ObjectId
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId         String?    @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
  user                   User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Profile {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  bio         String?
  avatarUrl   String?
  websiteUrl  String?
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String   @unique @db.ObjectId
}

model Content {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  type        ContentType
  url         String
  thumbnail   String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String      @db.ObjectId
  tags        String[]
  likes       Int         @default(0)
  shares      Int         @default(0)
}

enum Role {
  USER
  CREATOR
  ADMIN
}

enum ContentType {
  VIDEO
  PODCAST
  BLOG
  IMAGE
  MUSIC
  AUDIOBOOK
  GIF
  SVG
  LOGO
}
